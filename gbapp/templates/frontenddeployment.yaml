apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "guestbookapplication.fullname" . }}-frontend
  labels:
    app: guestbook
spec:
  selector:
    matchLabels:
      app: {{ template "guestbookapplication.name" . }}
      release: {{ .Release.Name }}
      tier: frontend
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "guestbookapplication.name" . }}
        release: {{ .Release.Name }}
        tier: frontend
    spec:
      containers:
      - name: frontend
        image: "{{ .Values.frontend.deployment.repository }}:{{ .Values.frontend.deployment.tag }}"
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        env:
        - name: GET_HOSTS_FROM
          value: dns
          # Using `GET_HOSTS_FROM=dns` requires your cluster to
          # provide a dns service. As of Kubernetes 1.3, DNS is a built-in
          # service launched automatically. However, if the cluster you are using
          # does not have a built-in DNS service, you can instead
          # access an environment variable to find the master
          # service's host. To do so, comment out the 'value: dns' line above, and
          # uncomment the line below:
          # value: env
        ports:
        - containerPort: 80808080
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "guestbookapplication.fullname" . }}-frontend
  labels:
    app: {{ template "guestbookapplication.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  type: {{ .Values.frontend.service.type }}
  ports:
    - port: 80808080
  selector:
    app: {{ template "guestbookapplication.name" . }}
    release: {{ .Release.Name }}
    tier: frontend
